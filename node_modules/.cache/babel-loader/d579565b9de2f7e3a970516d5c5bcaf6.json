{"ast":null,"code":"import { ADD_TO_CART, CLEAR_CART, COUNT_CART_TOTALS, REMOVE_CART_ITEM, TOGGLE_CART_ITEM_AMOUNT } from '../actions';\n\nconst cart_reducer = (state, action) => {\n  if (action.type === ADD_TO_CART) {\n    const {\n      id,\n      color,\n      amount,\n      product\n    } = action.payload;\n    const tempItem = state.cart.find(i => i.id === id + color);\n\n    if (tempItem) {} else {\n      const newItem = {\n        id: id + color,\n        name: product.name,\n        color,\n        amount,\n        image: product.images[0].url\n      };\n      return { ...state,\n        cart: [...state.cart, newItem]\n      };\n    }\n  }\n\n  return state;\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default cart_reducer;","map":{"version":3,"sources":["/home/kbly/Masaüstü/React-E-commerceApp/src/reducers/cart_reducer.js"],"names":["ADD_TO_CART","CLEAR_CART","COUNT_CART_TOTALS","REMOVE_CART_ITEM","TOGGLE_CART_ITEM_AMOUNT","cart_reducer","state","action","type","id","color","amount","product","payload","tempItem","cart","find","i","newItem","name","image","images","url","Error"],"mappings":"AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,iBAHF,EAIEC,gBAJF,EAKEC,uBALF,QAMO,YANP;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEtC,MAAIA,MAAM,CAACC,IAAP,KAAgBR,WAApB,EAAiC;AAC/B,UAAM;AAAES,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,MAAb;AAAqBC,MAAAA;AAArB,QAAiCL,MAAM,CAACM,OAA9C;AACA,UAAMC,QAAQ,GAAGR,KAAK,CAACS,IAAN,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACR,EAAF,KAASA,EAAE,GAAGC,KAArC,CAAjB;;AACA,QAAII,QAAJ,EAAc,CAGb,CAHD,MAII;AACF,YAAMI,OAAO,GAAC;AACZT,QAAAA,EAAE,EAACA,EAAE,GAACC,KADM;AAEZS,QAAAA,IAAI,EAACP,OAAO,CAACO,IAFD;AAGZT,QAAAA,KAHY;AAIZC,QAAAA,MAJY;AAKZS,QAAAA,KAAK,EAACR,OAAO,CAACS,MAAR,CAAe,CAAf,EAAkBC;AALZ,OAAd;AAOA,aAAM,EAAC,GAAGhB,KAAJ;AAAUS,QAAAA,IAAI,EAAC,CAAC,GAAGT,KAAK,CAACS,IAAV,EAAeG,OAAf;AAAf,OAAN;AACD;AACF;;AAGD,SAAOZ,KAAP;AACA,QAAM,IAAIiB,KAAJ,CAAW,gBAAehB,MAAM,CAACC,IAAK,iBAAtC,CAAN;AAED,CAzBD;;AA2BA,eAAeH,YAAf","sourcesContent":["import {\n  ADD_TO_CART,\n  CLEAR_CART,\n  COUNT_CART_TOTALS,\n  REMOVE_CART_ITEM,\n  TOGGLE_CART_ITEM_AMOUNT,\n} from '../actions'\n\nconst cart_reducer = (state, action) => {\n  \n  if (action.type === ADD_TO_CART) {\n    const { id, color, amount, product } = action.payload\n    const tempItem = state.cart.find((i) => i.id === id + color)\n    if (tempItem) {\n  \n     \n    }\n    else{\n      const newItem={\n        id:id+color,\n        name:product.name,\n        color,\n        amount,\n        image:product.images[0].url\n      }\n      return{...state,cart:[...state.cart,newItem]}\n    }\n  }\n\n\n  return state\n  throw new Error(`No Matching \"${action.type}\" - action type`)\n\n}\n\nexport default cart_reducer\n"]},"metadata":{},"sourceType":"module"}