{"ast":null,"code":"var _jsxFileName = \"/home/kbly/Masa\\xFCst\\xFC/React-E-commerceApp/src/context/products_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport reducer from '../reducers/products_reducer';\nimport { products_url as url } from '../utils/constants';\nimport { SIDEBAR_OPEN, SIDEBAR_CLOSE, GET_PRODUCTS_BEGIN, GET_PRODUCTS_SUCCESS, GET_PRODUCTS_ERROR, GET_SINGLE_PRODUCT_BEGIN, GET_SINGLE_PRODUCT_SUCCESS, GET_SINGLE_PRODUCT_ERROR } from '../actions';\nimport products_reducer from '../reducers/products_reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isSidebarOpen: false,\n  products_loading: false,\n  products_error: false,\n  products: [],\n  featured_products: [],\n  single_product_loading: false,\n  single_product_error: false,\n  single_product: {}\n};\nconst ProductsContext = /*#__PURE__*/React.createContext();\nexport const ProductsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const openSidebar = () => {\n    dispatch({\n      type: SIDEBAR_OPEN\n    });\n  };\n\n  const closeSidebar = () => {\n    dispatch({\n      type: SIDEBAR_CLOSE\n    });\n  }; //Burada bilgileri çekiyoruz amacımız dataların gelip gelmediğini kontrol eden küçük bilgilere sahip olmak kullanıcıya buna göre cıktılar vereceğiz.\n  //Eğer bilgiler alınmaya başlandı ise GET_PRODUCTS_BEGİN fonksiyonu çalışacak bu bize bilgilerin alındığını gösteren bir işlem.\n  //Burada amacımız ;\n\n  /*\n  1- gelen bilgileri fetch et.\n  Eğer bilgiler geldi ise .Başarılı olduğunu bildiriyoruz . Bildirdiğimiz fonskiyon içinde ürünleri yolluyoruz.\n  Gelen bilgiler yanlış ise dataların gelmediğini bildiren bir hata mesajı yollamak zorundayız bundan dolayı burada GET_PRODUCTS_ERROR fonksiyonunu çalıştıyoruz.\n  */\n\n\n  const fetchProducts = async url => {\n    dispatch({\n      type: GET_PRODUCTS_BEGIN\n    });\n\n    try {\n      const response = await axios.get(url);\n      const products = response.data;\n      console.log(products);\n      dispatch({\n        type: GET_PRODUCTS_SUCCESS,\n        payload: products\n      }); //Bİlgiler başarılı bir şekilde ulaşıldı.\n    } catch (error) {\n      dispatch({\n        type: GET_PRODUCTS_ERROR\n      }); // Gelen bilgilerde hata var\n    }\n  };\n\n  const fetchSingleProduct = async url => {\n    dispatch({\n      type: GET_SINGLE_PRODUCT_BEGIN\n    });\n\n    try {\n      const response = await axios.get(url);\n      const singleProduct = response.data;\n      dispatch({\n        type: GET_SINGLE_PRODUCT_SUCCESS,\n        payload: singleProduct\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_SINGLE_PRODUCT_ERROR\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts(url);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProductsContext.Provider, {\n    value: { ...state,\n      openSidebar,\n      closeSidebar,\n      fetchSingleProduct\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n_s(ProductsProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = ProductsProvider;\nexport const useProductsContext = () => {\n  _s2();\n\n  return useContext(ProductsContext);\n};\n\n_s2(useProductsContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsProvider\");","map":{"version":3,"sources":["/home/kbly/Masaüstü/React-E-commerceApp/src/context/products_context.js"],"names":["axios","React","useContext","useEffect","useReducer","reducer","products_url","url","SIDEBAR_OPEN","SIDEBAR_CLOSE","GET_PRODUCTS_BEGIN","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_ERROR","GET_SINGLE_PRODUCT_BEGIN","GET_SINGLE_PRODUCT_SUCCESS","GET_SINGLE_PRODUCT_ERROR","products_reducer","initialState","isSidebarOpen","products_loading","products_error","products","featured_products","single_product_loading","single_product_error","single_product","ProductsContext","createContext","ProductsProvider","children","state","dispatch","openSidebar","type","closeSidebar","fetchProducts","response","get","data","console","log","payload","error","fetchSingleProduct","singleProduct","useProductsContext"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useContext, useEffect, useReducer } from 'react'\nimport reducer from '../reducers/products_reducer'\nimport { products_url as url } from '../utils/constants'\nimport {\n  SIDEBAR_OPEN,\n  SIDEBAR_CLOSE,\n  GET_PRODUCTS_BEGIN,\n  GET_PRODUCTS_SUCCESS,\n  GET_PRODUCTS_ERROR,\n  GET_SINGLE_PRODUCT_BEGIN,\n  GET_SINGLE_PRODUCT_SUCCESS,\n  GET_SINGLE_PRODUCT_ERROR,\n} from '../actions'\nimport products_reducer from '../reducers/products_reducer'\n\nconst initialState = {\n  isSidebarOpen: false,\n  products_loading: false,\n  products_error: false,\n  products: [],\n  featured_products: [],\n  single_product_loading: false,\n  single_product_error: false,\n  single_product: {},\n}\n\nconst ProductsContext = React.createContext()\n\nexport const ProductsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const openSidebar = () => {\n    dispatch({ type: SIDEBAR_OPEN })\n  }\n  const closeSidebar = () => {\n    dispatch({ type: SIDEBAR_CLOSE })\n  }\n\n  //Burada bilgileri çekiyoruz amacımız dataların gelip gelmediğini kontrol eden küçük bilgilere sahip olmak kullanıcıya buna göre cıktılar vereceğiz.\n  //Eğer bilgiler alınmaya başlandı ise GET_PRODUCTS_BEGİN fonksiyonu çalışacak bu bize bilgilerin alındığını gösteren bir işlem.\n  //Burada amacımız ;\n  /*\n1- gelen bilgileri fetch et.\nEğer bilgiler geldi ise .Başarılı olduğunu bildiriyoruz . Bildirdiğimiz fonskiyon içinde ürünleri yolluyoruz.\n\nGelen bilgiler yanlış ise dataların gelmediğini bildiren bir hata mesajı yollamak zorundayız bundan dolayı burada GET_PRODUCTS_ERROR fonksiyonunu çalıştıyoruz.\n  */\n\n  const fetchProducts = async (url) => {\n    dispatch({ type: GET_PRODUCTS_BEGIN })\n    try {\n      const response = await axios.get(url)\n      const products = response.data\n      console.log(products)\n      dispatch({ type: GET_PRODUCTS_SUCCESS, payload: products })//Bİlgiler başarılı bir şekilde ulaşıldı.\n    } catch (error) {\n      dispatch({ type: GET_PRODUCTS_ERROR }) // Gelen bilgilerde hata var\n    }\n  }\n\n  const fetchSingleProduct = async (url) => {\n    dispatch({ type: GET_SINGLE_PRODUCT_BEGIN })\n    try {\n      const response = await axios.get(url)\n      const singleProduct = response.data\n      dispatch({ type: GET_SINGLE_PRODUCT_SUCCESS, payload: singleProduct })\n    } catch (error) {\n      dispatch({ type: GET_SINGLE_PRODUCT_ERROR })\n    }\n  }\n\n  useEffect(() => {\n    fetchProducts(url)\n  }, [])\n\n  return (\n    <ProductsContext.Provider\n      value={{ ...state, openSidebar, closeSidebar, fetchSingleProduct }}\n    >\n      {children}\n    </ProductsContext.Provider>\n  )\n}\n// make sure use\nexport const useProductsContext = () => {\n  return useContext(ProductsContext)\n}\n"]},"metadata":{},"sourceType":"module"}