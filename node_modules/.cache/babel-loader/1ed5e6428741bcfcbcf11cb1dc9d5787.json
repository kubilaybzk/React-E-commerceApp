{"ast":null,"code":"import { LOAD_PRODUCTS, SET_LISTVIEW, SET_GRIDVIEW, UPDATE_SORT, SORT_PRODUCTS, UPDATE_FILTERS, FILTER_PRODUCTS, CLEAR_FILTERS } from '../actions';\n\nconst filter_reducer = (state, action) => {\n  if (action.type === LOAD_PRODUCTS) {\n    let maxPrice = action.payload.map(p => p.price);\n    maxPrice = Math.max(...maxPrice);\n    return { ...state,\n      all_products: [...action.payload],\n      filtered_products: [...action.payload],\n      filters: { ...state.filters,\n        max_price: maxPrice,\n        price: maxPrice\n      }\n    };\n  }\n\n  return state;\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default filter_reducer;","map":{"version":3,"sources":["/home/kbly/Masaüstü/React-E-commerceApp/src/reducers/filter_reducer.js"],"names":["LOAD_PRODUCTS","SET_LISTVIEW","SET_GRIDVIEW","UPDATE_SORT","SORT_PRODUCTS","UPDATE_FILTERS","FILTER_PRODUCTS","CLEAR_FILTERS","filter_reducer","state","action","type","maxPrice","payload","map","p","price","Math","max","all_products","filtered_products","filters","max_price","Error"],"mappings":"AAAA,SACEA,aADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,aARF,QASO,YATP;;AAWA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,MAAIA,MAAM,CAACC,IAAP,KAAgBX,aAApB,EAAmC;AACjC,QAAIY,QAAQ,GAAGF,MAAM,CAACG,OAAP,CAAeC,GAAf,CAAoBC,CAAD,IAAOA,CAAC,CAACC,KAA5B,CAAf;AACAJ,IAAAA,QAAQ,GAAGK,IAAI,CAACC,GAAL,CAAS,GAAGN,QAAZ,CAAX;AAEA,WAAO,EACL,GAAGH,KADE;AAELU,MAAAA,YAAY,EAAE,CAAC,GAAGT,MAAM,CAACG,OAAX,CAFT;AAGLO,MAAAA,iBAAiB,EAAE,CAAC,GAAGV,MAAM,CAACG,OAAX,CAHd;AAILQ,MAAAA,OAAO,EAAE,EAAE,GAAGZ,KAAK,CAACY,OAAX;AAAoBC,QAAAA,SAAS,EAAEV,QAA/B;AAAyCI,QAAAA,KAAK,EAAEJ;AAAhD;AAJJ,KAAP;AAQD;;AAQD,SAAOH,KAAP;AACA,QAAM,IAAIc,KAAJ,CAAW,gBAAeb,MAAM,CAACC,IAAK,iBAAtC,CAAN;AACD,CAvBD;;AAyBA,eAAeH,cAAf","sourcesContent":["import {\n  LOAD_PRODUCTS,\n  SET_LISTVIEW,\n  SET_GRIDVIEW,\n  UPDATE_SORT,\n  SORT_PRODUCTS,\n  UPDATE_FILTERS,\n  FILTER_PRODUCTS,\n  CLEAR_FILTERS,\n} from '../actions'\n\nconst filter_reducer = (state, action) => {\n  if (action.type === LOAD_PRODUCTS) {\n    let maxPrice = action.payload.map((p) => p.price)\n    maxPrice = Math.max(...maxPrice)\n\n    return {\n      ...state,\n      all_products: [...action.payload],\n      filtered_products: [...action.payload],\n      filters: { ...state.filters, max_price: maxPrice, price: maxPrice },\n    }\n    \n    \n  }\n\n\n\n\n\n\n\n  return state\n  throw new Error(`No Matching \"${action.type}\" - action type`)\n}\n\nexport default filter_reducer\n"]},"metadata":{},"sourceType":"module"}